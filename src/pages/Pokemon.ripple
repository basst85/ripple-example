import { effect } from 'ripple';
import { setPageMeta } from '../router.ripple';
import { Card } from '../components/Card.ripple';
import { Button } from '../components/Button.ripple';
import { Spinner } from '../components/Spinner.ripple';
import { usePokemon } from '../hooks/usePokemon.ripple';

export default component Pokemon() {
	const { 
		pokemon, 
		loading, 
		error, 
		refetch
	} = usePokemon();

	effect(() => {
		setPageMeta({
			title: 'Pokemon List - RippleJS App',
			meta: [
			{
					name: 'description',
					content: 'View a list of Pokemon fetched from PokeAPI',
				},
			{
					name: 'keywords',
					content: 'pokemon, pokeapi, ripplejs, typescript',
				},
			{
					property: 'og:title',
					content: 'Pokemon List - RippleJS App',
				},
			{
					property: 'og:description',
					content: 'View a list of Pokemon fetched from PokeAPI',
				},
			{
					property: 'og:type',
					content: 'website',
				}
			],
		});
	});

	<div class='flex min-h-screen w-full items-center justify-center px-4 py-16'><Card>
		<header class='space-y-2'>
			<div class='flex items-center justify-between'>
				<span class='text-xs font-semibold uppercase tracking-[0.4em] text-primary'>{'Pokedex'}</span>
			</div>
			<h1 class='text-4xl font-semibold text-foreground tracking-tight'>{'Discover Pokémon'}</h1>
			<p class='max-w-xl text-sm text-muted-foreground'>{'Each refresh grabs a random list from PokéAPI.'}</p>
		</header>
		if (@loading) {
			<div class='flex flex-col items-center justify-center gap-4 rounded-[var(--radius)] border border-border bg-muted/5 px-6 py-12'>
				<Spinner />
				<p class='text-sm text-muted-foreground'>{'Loading random Pokémon...'}</p>
			</div>
		} else if (@error) {
			<div class='rounded-[var(--radius)] border border-destructive/40 bg-destructive/10 px-6 py-4 text-sm text-destructive'>{'Error: ' + @error}</div>
		} else {
			<div class='grid gap-3 rounded-[var(--radius)] border border-border bg-muted/5 p-4 sm:grid-cols-2'>for (let poke of @pokemon) {
				<div class='flex items-center gap-4 rounded-[var(--radius)] border border-border bg-card/40 px-4 py-3 transition hover:border-primary/40'>
					if (poke.sprites && poke.sprites.front_default) {
						<img src={poke.sprites.front_default} alt={poke.name} class='h-16 w-16 rounded-full bg-muted p-2 shadow-inner' />
					}

					<span class='text-lg font-semibold capitalize text-foreground'>{poke.name}</span>
				</div>
			}</div>
		}

		<div class='flex flex-wrap gap-3'>
			<Button text='Refresh List' onClick={refetch} variant='success' icon='⟳' />
			<Button text='Back to Home' to='/' icon='←' variant='ghost' />
		</div>
	</Card></div>
}